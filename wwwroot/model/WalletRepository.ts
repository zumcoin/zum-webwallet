/*
 * Copyright (c) 2018, Gnock
 * Copyright (c) 2019 ZumCoin Development Team
 * 
 *
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

import {RawWallet, Wallet} from "./Wallet";
import {CoinUri} from "./CoinUri";
import {Storage} from "./Storage";
import { Mnemonic } from "../model/Mnemonic";

export class WalletRepository{

	static hasOneStored() : Promise<boolean>{
		return Storage.getItem('wallet', null).then(function (wallet : any) {
			return wallet !== null;
		});
	}
	
	static getWithPassword(rawWallet : RawWallet, password : string) : Wallet|null{
		if(password.length > 32)
			password = password.substr(0 , 32);
		if(password.length < 32){
			password = ('00000000000000000000000000000000'+password).slice(-32);
		}

		let privKey = new (<any>TextEncoder)("utf8").encode(password);
		let nonce = new (<any>TextEncoder)("utf8").encode(rawWallet.nonce);
		// rawWallet.encryptedKeys = this.b64DecodeUnicode(rawWallet.encryptedKeys);
		let encrypted = new Uint8Array(<any>rawWallet.encryptedKeys);
		let decrypted = nacl.secretbox.open(encrypted, nonce, privKey);
		if(decrypted === null)
			return null;
		rawWallet.encryptedKeys = new TextDecoder("utf8").decode(decrypted);
		return Wallet.loadFromRaw(rawWallet);
	}

	static getLocalWalletWithPassword(password : string) : Promise<Wallet|null>{
		return Storage.getItem('wallet', null).then((existingWallet : any) => {
			//console.log(existingWallet);
			if(existingWallet !== null){
				//console.log(JSON.parse(existingWallet));
				let wallet : Wallet|null = this.getWithPassword(JSON.parse(existingWallet), password);
				//console.log(wallet);
				return wallet;
			}else{
				return null;
			}
		});
	}
	
	static save(wallet : Wallet, password : string) : Promise<void>{
		let rawWallet = this.getEncrypted(wallet, password);
		return Storage.setItem('wallet', JSON.stringify(rawWallet));
	}

	static getEncrypted(wallet : Wallet, password : string){
		if(password.length > 32)
			password = password.substr(0 , 32);
		if(password.length < 32){
			password = ('00000000000000000000000000000000'+password).slice(-32);
		}

		let privKey = new (<any>TextEncoder)("utf8").encode(password);
		let rawNonce = nacl.util.encodeBase64(nacl.randomBytes(16));
		let nonce = new (<any>TextEncoder)("utf8").encode(rawNonce);
		let rawWallet = wallet.exportToRaw();
		let uint8EncryptedKeys = new (<any>TextEncoder)("utf8").encode(rawWallet.encryptedKeys);

		let encrypted : Uint8Array = nacl.secretbox(uint8EncryptedKeys, nonce, privKey);
		rawWallet.encryptedKeys = <any>encrypted.buffer;
		let tabEncrypted = [];
		for(let i = 0; i < encrypted.length; ++i){
			tabEncrypted.push(encrypted[i]);
		}
		rawWallet.encryptedKeys = <any>tabEncrypted;
		rawWallet.nonce = rawNonce;
		return rawWallet;
	}

	static deleteLocalCopy() : Promise<void>{
		return Storage.remove('wallet');
	}

    static dottedLine(doc: any, xFrom: number, yFrom: number, xTo: number, yTo: number, segmentLength: number) {
        // Calculate line length (c)
        var a = Math.abs(xTo - xFrom);
        var b = Math.abs(yTo - yFrom);
        var c = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));

        // Make sure we have an odd number of line segments (drawn or blank) to fit it nicely
        var fractions = c / segmentLength;
        var adjustedSegmentLength = (Math.floor(fractions) % 2 === 0) ? (c / Math.ceil(fractions)) : (c / Math.floor(fractions));

        // Calculate x, y deltas per segment
        var deltaX = adjustedSegmentLength * (a / c);
        var deltaY = adjustedSegmentLength * (b / c);

        var curX = xFrom, curY = yFrom;
        while (curX <= xTo && curY <= yTo) {
            doc.line(curX, curY, curX + deltaX, curY + deltaY);
            curX += 2 * deltaX;
            curY += 2 * deltaY;
        }
    }

	static downloadEncryptedPdf(wallet : Wallet){
		if(wallet.keys.priv.spend === '')
			throw 'missing_spend';

		let coinWalletUri = CoinUri.encodeWalletKeys(
			wallet.getPublicAddress(),
			wallet.keys.priv.spend,
			wallet.keys.priv.view,
			wallet.creationHeight
		);

		let publicQrCode = kjua({
			render: 'canvas',
			text: wallet.getPublicAddress(),
			size:300,
		});

        let privateSpendQrCode = kjua({
            render: 'canvas',
            text: wallet.keys.priv.spend,
            size: 300,
        });

        let privateViewQrCode = kjua({
            render: 'canvas',
            text: wallet.keys.priv.view,
            size: 300,
        });

        
        let logo = "data:img/png;base64,";

		let doc = new jsPDF('landscape');

        // background color
        doc.setFillColor(116, 122, 135);
        doc.rect(0, 0, 297, 210, "F");

        

        // middle line
        doc.setLineWidth(0.2);
        doc.setDrawColor(255, 255, 255);
        this.dottedLine(doc, 0, 105, 297, 105, 2);
        // column lines
        doc.setDrawColor(255, 255, 255);
        this.dottedLine(doc, 99, 0, 99, 210, 2);
        this.dottedLine(doc, 198, 0, 198, 210, 2);


        // BOX 1 [x = 5, y = 10]
        doc.setFillColor(255, 255, 255);
        doc.setDrawColor(0, 132, 61);
        doc.rect(5, 5, 90, 90, "F");
        doc.setFillColor(0, 132, 61);
        doc.rect(5, 75, 90, 15, "F");
        doc.setTextColor(255, 255, 255);
        doc.setFontSize(30);
        doc.text('Private View', 79, 79, null, 180);
        doc.addImage(privateViewQrCode, 'PNG', 25, 20, 50, 50);
        let qrViewText = wallet.keys.priv.view;
        let qrViewSplit = Math.ceil(qrViewText.length / 2);
        doc.setFontSize(8)
        doc.setTextColor(0, 0, 0)
        doc.text(qrViewText.slice(0, qrViewSplit), 74, 15, null, 180);
        doc.text(qrViewText.slice(qrViewSplit), 74, 11, null, 180);


        // BOX 2 - [x = 104, y = 10]
        doc.setFillColor(255, 255, 255);
        doc.setDrawColor(0, 132, 61);
        doc.rect(104, 5, 90, 90, "F");
        doc.setFillColor(0, 132, 61);
        doc.rect(104, 75, 90, 15, "F");
        doc.setTextColor(255, 255, 255);
        doc.setFontSize(30);
        doc.text('Private Spend', 182.5, 79, null, 180);
        doc.addImage(privateSpendQrCode, 'PNG', 124, 20, 50, 50);
        let qrSpendText = wallet.keys.priv.spend;
        let qrSpendSplit = Math.ceil(qrSpendText.length / 2);
        doc.setFontSize(8)
        doc.setTextColor(0, 0, 0)
        doc.text(qrSpendText.slice(0, qrSpendSplit), 174, 15, null, 180);
        doc.text(qrSpendText.slice(qrSpendSplit), 174, 11, null, 180);


        // BOX 3 - [x = 203, y = 10]
        doc.setFillColor(255, 255, 255);
        doc.setDrawColor(0, 132, 61);
        doc.rect(203, 5, 90, 90, "F");
        doc.setFillColor(0, 132, 61);
        doc.rect(203, 75, 90, 15, "F");
        doc.setTextColor(255, 255, 255);
        doc.setFontSize(30);
        doc.text('Mnemonic Seed', 286, 79, null, 180);
        //todo, add mnemonic text
        doc.setFontSize(12)
        let mnemon = Mnemonic.mn_encode(wallet.keys.priv.spend, "english");
        let mnemonicWords = mnemon !== null ? mnemon.split(' ') : [];
        doc.setTextColor(0, 0, 0);
        try {
            let lineOne = mnemonicWords.splice(0, 5);
            let lineTwo = mnemonicWords.splice(0, 5);
            let lineThree = mnemonicWords.splice(0, 5);
            let lineFour = mnemonicWords.splice(0, 5);
            let lineFive = mnemonicWords.splice(0, 5);
            let startPos = 291;
            let strLineOne = lineOne.join(' ');
            let startLineOne = startPos - parseInt(Math.floor((50 - strLineOne.length) / 2).toString());
            doc.text(strLineOne, startLineOne, 63, null, 180);
            let strLineTwo = lineTwo.join(' ');
            let startLineTwo = startPos - parseInt(Math.floor((50 - strLineTwo.length) / 2).toString());
            doc.text(strLineTwo, startLineTwo, 52, null, 180);
            let strLineThree = lineThree.join(' ');
            let startLineThree = startPos - parseInt(Math.floor((50 - strLineThree.length) / 2).toString());
            doc.text(strLineThree, startLineThree, 39, null, 180);
            let strLineFour = lineFour.join(' ');
            let startLineFour = startPos - parseInt(Math.floor((50 - strLineFour.length) / 2).toString());
            doc.text(strLineFour, startLineFour, 27, null, 180);
            let strLineFive = lineFive.join(' ');
            let startLineFive = startPos - parseInt(Math.floor((50 - strLineFive.length) / 2).toString());
            doc.text(strLineFive, startLineFive, 15, null, 180);
        }
        catch (e) {
            console.log("Couldn't get Mnemonic, ignoring!");
        }
        // BOX 4 - [x = 0, y = 100]
        doc.setFillColor(255, 255, 255);
        doc.setDrawColor(0, 132, 61);
        doc.rect(5, 115, 90, 90, "F");
        doc.setFillColor(0, 132, 61);
        doc.rect(5, 120, 90, 15, "F");
        doc.setTextColor(255, 255, 255);
        doc.setFontSize(30);
        doc.text('Public Wallet', 20, 132, null, 0);
        doc.addImage(publicQrCode, 'PNG', 25, 140, 50, 50);
        let qrPublicText = wallet.getPublicAddress();
        let qrPublicSplit = Math.ceil(qrPublicText.length / 3);
        doc.setFontSize(8)
        doc.setTextColor(0, 0, 0)
        doc.text(qrPublicText.slice(0, qrPublicSplit), 23, 194, null, 0);
        doc.text(qrPublicText.slice(qrPublicSplit, qrPublicSplit * 2), 22, 198, null, 0);
        doc.text(qrPublicText.slice(qrPublicSplit * 2), 23, 202, null, 0);


        // BOX 5 - [x = 104, y = 110]
        doc.setFillColor(0, 132, 61);
        doc.roundedRect(104, 115, 89, 85, 2, 2, 'F');
        doc.setFontSize(10)
        doc.setTextColor(255, 255, 255)
        doc.text(108, 125, 'To deposit funds to this paper wallet, send the');
        doc.text(108, 130, 'ZumCoin (ZUM) coins to the public address.');
        doc.text(108, 150, 'DO NOT REVEAL THE PRIVATE SPEND KEY.');
        doc.text(108, 165, 'Until you are ready to import the balance from this');
        doc.text(108, 170, 'wallet to your ZumCoin wallet, a cryptocurrency');
        doc.text(108, 175, 'client, or exchange.');
        doc.text(108, 185, 'Amount:');
        doc.setDrawColor(255, 255, 255);
        doc.line(122, 185, 150, 185);
        doc.text(155, 185, 'Date:');
        doc.line(164, 185, 182, 185);
        doc.text(108, 190, 'Notes:');
        doc.line(119, 190, 182, 190);


        // BOX 6 - [x = 203, y = 110]
        doc.addImage(logo, 'PNG', 208, 118, 75, 75);


		try {
			doc.save('wallet_backup.pdf');
		} catch(e) {
			alert('Error ' + e);
		}

	}

}